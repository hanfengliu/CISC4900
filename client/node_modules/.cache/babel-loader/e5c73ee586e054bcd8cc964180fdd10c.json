{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lhf13\\\\Desktop\\\\projects\\\\Fullstack\\\\cisc4900\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showMessage, setShowMessage] = useState(false);\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\"\n  });\n  const [formerrors, setFormErrors] = useState({}); //this method handles the each form field changing and updates the relevant\n  //state value for that input\n\n  const handleChange = event => {\n    console.log(\"handleChange -> \" + event.target.name + \" : \" + event.target.value);\n    setValues(values => ({ ...values,\n      [event.target.name]: event.target.value\n    }));\n  }; //this method will check each field in your form. You define\n  //the rules for each field\n\n\n  const validate = () => {\n    console.log(\"Validate the form....\");\n    let errors = {}; //name field\n\n    if (!values.fullname) {\n      errors.fullname = \"Full name is required\";\n    } //email field\n\n\n    if (!values.email) {\n      errors.email = \"Email address is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = \"Email address is invalid\";\n    }\n\n    setFormErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSubmit = event => {\n    if (event) event.preventDefault();\n\n    if (validate(values)) {\n      setShowMessage(true);\n    } else {\n      setShowMessage(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"React Bootstrap \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Form Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              show: showMessage,\n              variant: \"success\",\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"Success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"This is an alert, and these can be shown in a variety of styles provided by Bootstrap. Our form submit button simply shows this alert. Another post will go through form validation and errors.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => setShowMessage(false),\n                  variant: \"outline-success\",\n                  children: \"Close this alert\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formGridName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  placeholder: \"Full Name\",\n                  type: \"text\",\n                  name: \"fullname\",\n                  value: values.fullname,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this), formerrors.fullname && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-warning\",\n                  children: formerrors.fullname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridEmail\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    placeholder: \"Enter email\",\n                    type: \"email\",\n                    name: \"email\",\n                    value: values.email,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), formerrors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-warning\",\n                    children: formerrors.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                size: \"lg\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aPrAZXywFnoBk3Q++56I3qv70vI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/lhf13/Desktop/projects/Fullstack/cisc4900/client/src/App.js"],"names":["React","useState","Container","Row","Col","Button","Form","Alert","App","showMessage","setShowMessage","values","setValues","fullname","email","formerrors","setFormErrors","handleChange","event","console","log","target","name","value","validate","errors","test","Object","keys","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./App.css\";\nfunction App() {\n  const [showMessage, setShowMessage] = useState(false);\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\",\n  });\n  const [formerrors, setFormErrors] = useState({});\n  //this method handles the each form field changing and updates the relevant\n  //state value for that input\n  const handleChange = (event) => {\n    console.log(\n      \"handleChange -> \" + event.target.name + \" : \" + event.target.value\n    );\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n  //this method will check each field in your form. You define\n  //the rules for each field\n  const validate = () => {\n    console.log(\"Validate the form....\");\n    let errors = {};\n    //name field\n    if (!values.fullname) {\n      errors.fullname = \"Full name is required\";\n    }\n    //email field\n    if (!values.email) {\n      errors.email = \"Email address is required\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\n      errors.email = \"Email address is invalid\";\n    }\n    setFormErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    if (validate(values)) {\n      setShowMessage(true);\n    } else {\n      setShowMessage(false);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          React Bootstrap <code>Form Example</code>.\n        </p>\n      </header>\n      <Container className=\"p-3\">\n        <Container>\n          <Row>\n            <Col>\n              <Alert show={showMessage} variant=\"success\">\n                <Alert.Heading>Success</Alert.Heading>\n                <p>\n                  This is an alert, and these can be shown in a variety of\n                  styles provided by Bootstrap. Our form submit button simply\n                  shows this alert. Another post will go through form validation\n                  and errors.\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                  <Button\n                    onClick={() => setShowMessage(false)}\n                    variant=\"outline-success\"\n                  >\n                    Close this alert\n                  </Button>\n                </div>\n              </Alert>\n            </Col>\n          </Row>\n          <Row>\n            <Col></Col>\n            <Col>\n              <Form onSubmit={handleSubmit}>\n                <Form.Group controlId=\"formGridName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    placeholder=\"Full Name\"\n                    type=\"text\"\n                    name=\"fullname\"\n                    value={values.fullname}\n                    onChange={handleChange}\n                  />\n                  {formerrors.fullname && (\n                    <p className=\"text-warning\">{formerrors.fullname}</p>\n                  )}\n                </Form.Group>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                      placeholder=\"Enter email\"\n                      type=\"email\"\n                      name=\"email\"\n                      value={values.email}\n                      onChange={handleChange}\n                    />\n                    {formerrors.email && (\n                      <p className=\"text-warning\">{formerrors.email}</p>\n                    )}\n                  </Form.Group>\n                </Form.Row>\n                <Button type=\"submit\" variant=\"primary\" size=\"lg\">\n                  Submit\n                </Button>\n              </Form>\n            </Col>\n            <Col></Col>\n          </Row>\n        </Container>\n      </Container>\n    </div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}